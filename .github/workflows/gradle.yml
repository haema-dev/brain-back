name: brain-back

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Add execute permission to Gradle Wrapper
      run: chmod +x ./gradlew      
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v3
    - name: Build with Gradle Wrapper
      run: ./gradlew build

    - name: Build Docker image
      run: |
        docker build . -t ${{ secrets.BRAIN_DOCKER_REGISTRY_URL }}/brain-back

    - name: Log into Docker Hub
      run: docker login -u ${{ secrets.BRAIN_DOCKER_USERNAME }} -p ${{ secrets.BRAIN_DOCKER_PASSWORD }}

    - name: Push Docker image to registry
      run: docker push ${{ secrets.BRAIN_DOCKER_REGISTRY_URL }}/brain-back
    
    - name: Deploy Docker container on server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.BRAIN_SERVER_URL }}
        username: ${{ secrets.BRAIN_SERVER_USERNAME }}
        key: ${{ secrets.BRAIN_SSH_PRIVATE_KEY }}
        port: ${{ secrets.BRAIN_SERVER_PORT }}
        timeout: 120s
        # script: |
        #   sudo docker pull ${{ secrets.BRAIN_DOCKER_REGISTRY_URL }}/brain-back
        #   sudo docker stop brain-back || true
        #   sudo docker rm brain-back || true
        #   sudo docker run -d --name brain-back -p 8081:8081 ${{ secrets.BRAIN_DOCKER_REGISTRY_URL }}/brain-back
        script: |
          echo "Pulling Docker image..."
          if sudo docker pull ***/***-back; then
            echo "Image pulled successfully!"
          else
            echo "Failed to pull image!"
            exit 1  # 여기서 실패 시 스크립트가 종료됩니다.
          fi
          
          echo "Stopping existing Docker container..."
          if sudo docker stop ***-back; then
            echo "Container stopped successfully."
          else
            echo "Failed to stop the container."
            exit 1  # 컨테이너 중지 실패 시 스크립트 종료
          fi
          
          echo "Removing existing Docker container..."
          if sudo docker rm ***-back; then
            echo "Container removed successfully."
          else
            echo "Failed to remove the container."
            exit 1  # 컨테이너 제거 실패 시 스크립트 종료
          fi
          
          echo "Running new Docker container..."
          if sudo docker run -d --name ***-back -p ***81:***81 ***/***-back; then
            echo "Container is running."
          else
            echo "Failed to start the container."
            exit 1  # 컨테이너 실행 실패 시 스크립트 종료
          fi
